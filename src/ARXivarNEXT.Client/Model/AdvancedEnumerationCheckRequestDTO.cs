/* 
 * WebAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: data
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = ARXivarNEXT.Client.Client.SwaggerDateConverter;

namespace ARXivarNEXT.Client.Model
{
    /// <summary>
    /// Class for a request of an advanced enumeration check
    /// </summary>
    [DataContract]
    public partial class AdvancedEnumerationCheckRequestDTO :  IEquatable<AdvancedEnumerationCheckRequestDTO>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AdvancedEnumerationCheckRequestDTO" /> class.
        /// </summary>
        /// <param name="docNumbers">Document numbers to check.</param>
        /// <param name="lastNumbers">Last numbers to use for enumeration check.</param>
        public AdvancedEnumerationCheckRequestDTO(List<int?> docNumbers = default(List<int?>), List<EnumerationCheckLastNumberDTO> lastNumbers = default(List<EnumerationCheckLastNumberDTO>))
        {
            this.DocNumbers = docNumbers;
            this.LastNumbers = lastNumbers;
        }
        
        /// <summary>
        /// Document numbers to check
        /// </summary>
        /// <value>Document numbers to check</value>
        [DataMember(Name="docNumbers", EmitDefaultValue=false)]
        public List<int?> DocNumbers { get; set; }

        /// <summary>
        /// Last numbers to use for enumeration check
        /// </summary>
        /// <value>Last numbers to use for enumeration check</value>
        [DataMember(Name="lastNumbers", EmitDefaultValue=false)]
        public List<EnumerationCheckLastNumberDTO> LastNumbers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AdvancedEnumerationCheckRequestDTO {\n");
            sb.Append("  DocNumbers: ").Append(DocNumbers).Append("\n");
            sb.Append("  LastNumbers: ").Append(LastNumbers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AdvancedEnumerationCheckRequestDTO);
        }

        /// <summary>
        /// Returns true if AdvancedEnumerationCheckRequestDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of AdvancedEnumerationCheckRequestDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AdvancedEnumerationCheckRequestDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DocNumbers == input.DocNumbers ||
                    this.DocNumbers != null &&
                    this.DocNumbers.SequenceEqual(input.DocNumbers)
                ) && 
                (
                    this.LastNumbers == input.LastNumbers ||
                    this.LastNumbers != null &&
                    this.LastNumbers.SequenceEqual(input.LastNumbers)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DocNumbers != null)
                    hashCode = hashCode * 59 + this.DocNumbers.GetHashCode();
                if (this.LastNumbers != null)
                    hashCode = hashCode * 59 + this.LastNumbers.GetHashCode();
                return hashCode;
            }
        }
    }

}
